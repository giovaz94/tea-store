apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: giovaz94/tea-store-general 
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: MCL
              value: "190"
            - name: SERVICE_NAME
              value: "auth"
            - name: KEEP_ALIVE
              value: "5000"
            - name: PORT
              value: "80"
            - name: MAX_SIZE
              value: "100"
            - name: OUTPUT_SERVICES
              value: '{"http://persistence-service/request":"1"}'

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "80"
      prometheus.io/path: "/metrics"   # optional, defaults to /metrics
spec:
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: auth-service
spec:
  host: auth-service
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 10
      http:
        idleTimeout: 65s   # Match Node.js keepAliveTimeout
    loadBalancer:
      simple: RANDOM
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: auth-service
spec:
  hosts:
    - auth-service
  http:
    - route:
        - destination:
            host: auth-service
